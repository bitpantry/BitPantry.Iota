@model NewCardModel

@using Humanizer


<div class="col-12 mt-4 lead">
    <strong>
        Create a new card
    </strong>
</div>

<form asp-action="New" id="lookupForm">
    <div class="row mt-4">
        <div class="col-8 col-md-8 col-lg-6 col-xl-5">
            <div class="input-group">
                <input id="address" name="address" class="form-control" placeholder="e.g., romans 12:1-2" style="outline: none; box-shadow: none;" />
                <div class="input-group-append">
                    <button type="submit" class="btn btn-primary">Go</button>
                </div>
            </div>
        </div>
        <div class="col-4 col-md-3 col-lg-2 col-xl-1">
                @Html.DropDownListFor( 
                    m => m.BibleId,   
                    new SelectList(Model.Bibles, nameof(BibleModel.Id), nameof(BibleModel.ShortName)),  
                    new { @class = "form-control" } 
                )
        </div>
    </div>
</form>



@if(Model.CreatedCardId > 0)
{
    <p class="fs-6 mt-4">
        Added @Model.CreatedAddress to the @Model.CreatedToTab.Humanize() tab. 
    </p>

    <p>
        Enter a new address above to create a new card.
    </p>

    <div class="pt-4">
        <a class="btn btn-primary btn-sm me-1" asp-action="Index" asp-controller="Tabs">View All Cards</a>
        <a class="btn btn-primary btn-sm" asp-action="Index" asp-controller="Review">Start Review</a>
    </div>

}
else if(!string.IsNullOrEmpty(Model.AddressQuery) && !Model.IsValidAddress) 
{
    <div class="mt-4 fs-6">
        No passage found for "@(Model.AddressQuery)"
    </div>
}
else if(Model.Passage != null)
{
    <div class="mt-5">
        <span class="display-6">@Model.Passage.Address</span>
    </div>

    <div class="mt-4">
        <partial name="_PassagePartial" model="@Model.Passage" />
    </div>

    <div class="mt-5">
        @if(Model.IsCardAlreadyCreated)
        {
            <button class="btn btn-primary" disabled>Create Card</button>
            <div class="mt-2 fw-light">Card already exists</div>
        }
        else
        {
            <form asp-action="Create" id="createForm">
                <input type="hidden" name="address" value="@Model.Passage.Address" />
                <input type="hidden" name="bibleId" value="@Model.BibleId" />
                <button class="btn btn-primary" type="submit">Create Card</button>
            </form>
        }           
    </div>
}


<script>

    document.addEventListener('DOMContentLoaded', () => {

        document.querySelector('input[name="address"]').focus();
        const bibleIdElement = document.getElementById('BibleId');

        bibleIdElement.addEventListener('change', () => {

            const form = document.getElementById('lookupForm');

            const addressHid = document.createElement('input');
            addressHid.type = 'hidden';
            addressHid.name = 'address';
            addressHid.value = '@Model.AddressQuery';

            const visibleAddressInput = document.getElementById('address');
            visibleAddressInput.name = 'address_temp';

            form.appendChild(addressHid);

            form.submit();

        });
    });

</script>



