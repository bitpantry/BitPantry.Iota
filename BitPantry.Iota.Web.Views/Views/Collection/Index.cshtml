@model TabsModel

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@using BitPantry.Iota.Common;
@using Humanizer


@* ------- SET VARIABLES ------- *@

@{
    bool isWeekTabActive = Model.ActiveTab >= Tab.Sunday && Model.ActiveTab <= Tab.Saturday;
    bool isMonthTabActive = Model.ActiveTab >= Tab.Day1 && Model.ActiveTab <= Tab.Day31;
}

@* ------- TOP LEVEL TABS ------- *@


<ul class="nav nav-tabs nav-justified mt-4 w-100 main-tabs">
    <li class="nav-item">
        <a class="nav-link@(Model.ActiveTab == Tab.Queue ? " active" : "")" asp-action="index" asp-route-tab="@Tab.Queue">Queue</a>
    </li>
    <li class="nav-item">
        <a class="nav-link@(Model.ActiveTab == Tab.Daily ? " active" : "")" asp-action="index" asp-route-tab="@Tab.Daily">Daily</a>
    </li>
    <li class="nav-item">
        <a class="nav-link@(Model.ActiveTab == Tab.Odd ? " active" : "")" asp-action="index" asp-route-tab="@Tab.Odd">Odd</a>
    </li>
    <li class="nav-item">
        <a class="nav-link@(Model.ActiveTab == Tab.Even ? " active" : "")" asp-action="index" asp-route-tab="@Tab.Even">Even</a>
    </li>
    <li class="nav-item">
        <a class="nav-link@(isWeekTabActive ? " active" : "")" asp-action="index" asp-route-tab="@Tab.Sunday">Weekday</a>
    </li>
    <li class="nav-item">
        <a class="nav-link@(isMonthTabActive ? " active" : "")" asp-action="index" asp-route-tab="@Tab.Day1">Date</a>
    </li>
</ul>


@* ------- DAYS OF THE WEEK ------- *@

@if (isWeekTabActive)
{
    if (Model.WeekdaysWithData.Any())
    {
        <nav class="nav py-3" style="border-bottom: 1px solid #DEDEDE;">

            @foreach (var day in Model.WeekdaysWithData)
            {
                <a class="nav-link@(day == Model.ActiveTab ? " active" : "")" asp-action="index" asp-route-tab="@day">@day.Humanize()</a>
            }

        </nav>
    }
}

@* ------- DAYS OF THE MONTH ------- *@

@if (isMonthTabActive)
{
    if (Model.DaysOfMonthWithData.Any())
    {
        <nav class="nav py-3" style="border-bottom: 1px solid #DEDEDE;">

            @foreach (var day in Model.DaysOfMonthWithData)
            {
                <a class="nav-link@(day == Model.ActiveTab ? " active" : "")" asp-action="index" asp-route-tab="@day">@(((int)day) - (int)Tab.Saturday)</a>
            }

        </nav>
    }
}

@* ------- SORTABLE SET ------- *@

@if(Model.Cards.Count() > 1)
{
    <style>

        .handle {
            cursor: grab;
        }

        .handle:active {
            cursor: grabbing;
        }

    </style>

    <div class="container mt-4">

        <div class="row justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-8">
                <ul id="cardsList" class="list-group">
                    @foreach (var card in Model.Cards)
                    {
                        <li class="list-group-item" id="@card.Id">
                            @if (Model.ActiveTab == Tab.Queue)
                            {
                                <img src="~/drag.svg" alt="Icon" class="handle me-2" width="24" height="24" />
                            }
                            <a asp-action="Maintenance" asp-controller="Card" asp-route-id="@card.Id">@card.Address</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

    </div>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/gh/RubaXa/Sortable/Sortable.min.js"></script>
        <script>
            var el = document.getElementById('cardsList');
            var sortable = Sortable.create(el, {
                animation: 175,
                handle: '.handle', // Specify the handle class here
                onEnd: function (evt) {
                    var itemEl = evt.item;
                    var cardId = parseInt(itemEl.getAttribute('id'));
                    var newOrder = evt.newIndex + 1;

                    var body = JSON.stringify({
                        cardId: cardId,
                        newOrder: newOrder,
                        tab: '@Model.ActiveTab'
                    });

                    fetch('/Card/Reorder', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: body
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                console.log('Order updated successfully');
                            } else {
                                console.error('Failed to update order');
                            }
                        })
                        .catch(error => console.error('Error:', error));
                }
            });

        </script>
    }

} 
else if(Model.Cards.Count == 1) @* ------- SINGLE CARD ------- *@
{
    <partial name="_CardMaintenancePartial" model='@Model.Cards.First()' />
}
else
{
    <div class="container mt-4 display-6">No cards found</div>
}





